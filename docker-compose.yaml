version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/msa
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - msa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  service-event:
    build:
      context: .
      dockerfile: ./apps/service-event/Dockerfile
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/msa
    networks:
      - msa-network

  service-user:
    build:
      context: .
      dockerfile: ./apps/service-user/Dockerfile
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/msa
    networks:
      - msa-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    networks:
      - msa-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://root:rootpassword@localhost:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo-data:

networks:
  msa-network:
    driver: bridge